# Complete list of all available properties: https://docs.upsun.com/create-apps/app-reference.html
applications:
  vllmupsuntest:
    # Application source code directory
    source:
      root: "/"

    # The runtime the application uses.
    # Complete list of available runtimes: https://docs.upsun.com/create-apps/app-reference.html#types
    type: 'python:3.11'

    # Choose which container profile (ratio CPU+RAM) your app will use. Default value comes from the image itself.
    # More information: https://docs.upsun.com/manage-resources/adjust-resources.html#adjust-a-container-profile
    container_profile: HIGHER_MEMORY

    # The relationships of the application with services or other applications.
    # The left-hand side is the name of the relationship as it will be exposed
    # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
    # side is in the form `<service name>:<endpoint name>`.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#relationships

    # Mounts define directories that are writable after the build is complete.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#mounts
    mounts:
      # The default HF_HOME (f.k.a TRANSFORMERS_CACHE) cache directory. vLLM wants to use a cache. Having it in a mount allows to persist across deploys
      '/mnt/hfcache':
          source: local
          source_path: 'hfcache'
      # vLLM needs a scratch space for its own caches/configs.
      # Create a /app/.config mount so vllm can write there, and avoid errors of "OSError: [Errno 30] Read-only file system: '/app/.config'"
      '/.config':
          source: local
          source_path: 'config'
      '/.global':
        source: local
        source_path: 'global'

    # Alternate copies of the application to run as background processes.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#workers
    # workers:

    # The timezone for crons to run. Format: a TZ database name. Defaults to UTC, which is the timezone used for all logs
    # no matter the value here. More information: https://docs.upsun.com/create-apps/timezone.html
    # timezone: <time-zone>

    # Access control for roles accessing app environments.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#access
    # access:

    # Variables to control the environment. More information: https://docs.upsun.com/create-apps/app-reference.html#variables

    # Outbound firewall rules for the application. More information: https://docs.upsun.com/create-apps/app-reference.html#firewall
    # firewall:

    # Specifies a default set of build tasks to run. Flavors are language-specific.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#build
    build:
      flavor: none

    # Installs global dependencies as part of the build process. They’re independent of your app’s dependencies and
    # are available in the PATH during the build process and in the runtime environment. They’re installed before
    # the build hook runs using a package manager for the language.
    # More information: https://docs.upsun.com/create-apps/app-reference.html#dependencies
    dependencies:
      python3: 
        pipenv: '2023.2.4'

    # Hooks allow you to customize your code/environment as the project moves through the build and deploy stages
    # More information: https://docs.upsun.com/create-apps/app-reference.html#hooks
    hooks:
      # The build hook is run after any build flavor.
      # More information: https://docs.upsun.com/create-apps/hooks/hooks-comparison.html#build-hook
      build: |
        set -eu

        # Download the latest version of pip
        pip install --upgrade pip

        pip install cmake>=3.26 wheel packaging ninja "setuptools-scm>=8" numpy
        pip install -v -r requirements-cpu.txt --extra-index-url https://download.pytorch.org/whl/cpu

        # Install pytorch: https://pytorch.org/get-started/locally/
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

        # Install vLLM: https://docs.vllm.ai/en/latest/getting_started/cpu-installation.html
        # General instructions given on the site are at https://docs.vllm.ai/en/latest/getting_started/cpu-installation.html
        #
        # I am going to explicitly reference pip3 and python3 below, though it probably won't make a difference
        pip install wheel packaging ninja setuptools>=49.4.0 numpy
        
      deploy: |  
        # Set environment variable
        VLLM_TARGET_DEVICE=cpu python3 setup.py install --prefix=$PLATFORM_APP_DIR/.global
    
    web:
      commands:
        start: "gunicorn -b unix:$SOCKET config.wsgi"
      upstream:
        socket_family: unix